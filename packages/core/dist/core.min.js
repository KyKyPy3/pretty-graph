!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("three")):"function"==typeof define&&define.amd?define("prettyGraphCore",["three"],t):"object"==typeof exports?exports.prettyGraphCore=t(require("three")):e.prettyGraphCore=t(e.three)}("undefined"!=typeof self?self:this,(function(e){return(()=>{"use strict";var t={881:t=>{t.exports=e}},i={};function s(e){var n=i[e];if(void 0!==n)return n.exports;var r=i[e]={exports:{}};return t[e](r,r.exports,s),r.exports}s.d=(e,t)=>{for(var i in t)s.o(t,i)&&!s.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};return(()=>{s.r(n),s.d(n,{PretyGraph:()=>u});var e=s(881);class t{constructor(){this.events={}}on(e,t){return"object"!=typeof this.events[e]&&(this.events[e]=[]),this.events[e].push(t),()=>this.removeListener(e,t)}removeListener(e,t){if("object"!=typeof this.events[e])return;const i=this.events[e].indexOf(t);i>-1&&this.events[e].splice(i,1)}removeAllListeners(){Object.keys(this.events).forEach((e=>this.events[e].splice(0,this.events[e].length)))}emit(e,...t){"object"==typeof this.events[e]&&[...this.events[e]].forEach((e=>e.apply(this,t)))}once(e,t){const i=this.on(e,((...e)=>{i(),t.apply(this,e)}));return i}}class i extends e.EventDispatcher{constructor(e){super(),this._activeEdges=[],this._graph=e}hide(){this._arrowMesh&&(this._arrowMesh.visible=!1)}show(){this._arrowMesh&&(this._arrowMesh.visible=!0)}recalculate(){if(!this._arrowGeometry)return;const{vertices:t}=this._calculateArrowData();this._arrowGeometry.boundingSphere=this._computeBoundingSphere(t);const i=new e.BufferAttribute(t,this._arrowGeometry.attributes.position.itemSize,this._arrowGeometry.attributes.position.normalized);this._arrowGeometry.setAttribute("position",i)}draw(){this._clearInternalState(),this._arrowGeometry=new e.BufferGeometry;const{vertices:t,colors:i}=this._calculateArrowData();this._arrowGeometry.setAttribute("position",new e.BufferAttribute(t,2).setUsage(e.DynamicDrawUsage)),this._arrowGeometry.setAttribute("color",new e.Float32BufferAttribute(i,3).setUsage(e.DynamicDrawUsage)),this._arrowGeometry.computeVertexNormals(),this._arrowGeometry.boundingSphere=this._computeBoundingSphere(t),this._arrowMaterial=new e.ShaderMaterial({depthTest:!1,fragmentShader:"\n  precision highp float;\n\n  varying vec3 vColor;\n\n  void main() {\n    gl_FragColor = vec4(vColor, 1.0);\n  }\n",side:e.BackSide,transparent:!1,vertexColors:!0,vertexShader:"\n  precision mediump float;\n\n  attribute vec3 translation;\n\n  varying vec3 vColor;\n\n  void main() {\n    vColor = color;\n\n    vec3 pos = position + translation;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n  }\n"}),this._arrowMaterial.name="ArrowMaterial",this._arrowMesh=new e.Mesh(this._arrowGeometry,this._arrowMaterial),this._graph._scene.add(this._arrowMesh)}dispose(){this._clearInternalState(),this._graph=null}clearActiveArrowOfEdges(){this.setArrowsColor(this._activeEdges)}setActiveArrowByEdges(e){this._activeEdges=e,this.setArrowsColor(this._activeEdges,this._graph.dataConfig.colorsEvents.selectEdge)}setDeactivatedArrowByEdges(e){e.map((e=>this._activeEdges.indexOf(e))).forEach((e=>{this._activeEdges.splice(e,1)})),this.setArrowsColor(e)}setArrowsColor(t,i){var s,n,r;if(!t.length)return;const o=new e.Color;for(const e of t){i?o.setStyle(i):o.setStyle(e.color);const t=e.__arrowIndex/3;null===(s=this._arrowGeometry)||void 0===s||s.attributes.color.setXYZ(t,o.r,o.g,o.b),null===(n=this._arrowGeometry)||void 0===n||n.attributes.color.setXYZ(t+1,o.r,o.g,o.b),null===(r=this._arrowGeometry)||void 0===r||r.attributes.color.setXYZ(t+2,o.r,o.g,o.b)}this._arrowGeometry&&(this._arrowGeometry.attributes.color.needsUpdate=!0)}_clearInternalState(){this._arrowMesh&&(this._graph._scene.remove(this._arrowMesh),this._arrowMesh=null),this._arrowMaterial&&(this._arrowMaterial.dispose(),this._arrowMaterial=null),this._arrowGeometry&&(this._arrowGeometry.dispose(),this._arrowGeometry=null)}_calculateArrowData(){const t=this._graph._edges,i=new Float32Array(6*t.length),s=new Float32Array(9*t.length),n=new e.Color;for(let e=0,r=0,o=0,a=t.length;e<a;e++,r+=6,o+=9){if("none"===t[e].arrow)continue;let a,h;t[e].arrow&&"target"!==t[e].arrow?(a=t[e].target,h=t[e].source):(a=t[e].source,h=t[e].target),t[e].__arrowIndex=o,n.setStyle(t[e].color);const d=this._calculateArrowVertices(t[e].size,a,h);i[r+0]=d.pointBelow[0]||0,i[r+1]=d.pointBelow[1]||0,i[r+2]=d.pointOnLine[0]||0,i[r+3]=d.pointOnLine[1]||0,i[r+4]=d.pointAbove[0]||0,i[r+5]=d.pointAbove[1]||0,s[o+0]=n.r,s[o+1]=n.g,s[o+2]=n.b,s[o+3]=n.r,s[o+4]=n.g,s[o+5]=n.b,s[o+6]=n.r,s[o+7]=n.g,s[o+8]=n.b}return{colors:s,vertices:i}}_calculateArrowVertices(e,t,i){const s=i.size/2*this._graph.nodeScalingFactor-.4,n=t.x-i.x,r=t.y-i.y,o=Math.atan2(r,n),a=Math.sqrt(n*n+r*r),h=i.x+s*Math.cos(o),d=i.y+s*Math.sin(o),l=e<6?6:e,c=e<6?12:1.5*e,_=[h+c*n/a,d+c*r/a];return{pointAbove:[_[0]+l*-r/a,_[1]+l*n/a],pointBelow:[_[0]-l*-r/a,_[1]-l*n/a],pointOnLine:[h,d]}}_computeBoundingSphere(t){const i=new e.Sphere;if(t){const s=new e.Vector2,n=new e.Vector2(i.center.x,i.center.y);let r=0;for(let e=0,i=t.length;e<i;e+=2)s.fromArray(t,e),r=Math.max(r,n.distanceToSquared(s));i.radius=Math.sqrt(r),isNaN(i.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}return i}}e.UniformsLib.line={resolution:{value:new e.Vector2(1,1)},dashScale:{value:1},useColor:{value:0},dashSize:{value:1},scale:{value:1},gapSize:{value:1}},e.ShaderLib.line={uniforms:e.UniformsUtils.merge([e.UniformsLib.common,e.UniformsLib.fog,e.UniformsLib.line]),vertexShader:"\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n    \tuniform vec2 resolution;\n    \tuniform float scale;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n    \tattribute float linewidth;\n    \tattribute float dashed;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n    \tvarying vec2 vUv;\n    \tvarying float vDashed;\n\n\t\tuniform float dashScale;\n\t\tattribute float instanceDistanceStart;\n\t\tattribute float instanceDistanceEnd;\n\t\tvarying float vLineDistance;\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\tif (dashed > 0.5) {\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n      \t\t}\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n      \t\tvUv = uv;\n      \t\tvDashed = dashed;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec2 ndcStart = clipStart.xy / clipStart.w;\n\t\t\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd - ndcStart;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t// perpendicular to dir\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n      \t\t// adjust for linewidth\n      \t\toffset *= linewidth * scale;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t",fragmentShader:"\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\t\tuniform float useColor;\n\n    \tuniform float dashSize;\n    \tuniform float gapSize;\n\n\t\tvarying float vLineDistance;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n    \tvarying vec2 vUv;\n    \tvarying float vDashed;\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\tif (vDashed > 0.5) {\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n      \t\t}\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\tfloat a = vUv.x;\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t}\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tif (useColor == 1.0) {\n\t\t\t\tgl_FragColor = vec4( vColor, 1.0 );\n\t\t\t} else {\n\t\t\t\tgl_FragColor = vec4( diffuseColor.rgb, diffuseColor.a );\n\t\t\t}\n\n\t\t\t#include <premultiplied_alpha_fragment>\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\n\t\t}\n\t\t"};class r extends e.ShaderMaterial{constructor(t){super({type:"LineMaterial",uniforms:e.UniformsUtils.clone(e.ShaderLib.line.uniforms),vertexShader:e.ShaderLib.line.vertexShader,fragmentShader:e.ShaderLib.line.fragmentShader,clipping:!0}),this.dashed=!1,Object.defineProperties(this,{color:{enumerable:!0,get:function(){return this.uniforms.diffuse.value},set:function(e){this.uniforms.diffuse.value=e}},useColor:{enumerable:!0,get:function(){return this.uniforms.useColor.value},set:function(e){this.uniforms.useColor.value=e}},dashScale:{enumerable:!0,get:function(){return this.uniforms.dashScale.value},set:function(e){this.uniforms.dashScale.value=e}},dashSize:{enumerable:!0,get:function(){return this.uniforms.dashSize.value},set:function(e){this.uniforms.dashSize.value=e}},gapSize:{enumerable:!0,get:function(){return this.uniforms.gapSize.value},set:function(e){this.uniforms.gapSize.value=e}},scale:{enumerable:!0,get:function(){return this.uniforms.scale.value},set:function(e){this.uniforms.scale.value=e}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(e){this.uniforms.resolution.value.copy(e)}}}),this.setValues(t)}}r.prototype.isLineMaterial=!0;class o extends e.InstancedBufferGeometry{constructor(){super(),this.type="LineSegmentsGeometry",this.setIndex([0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5]),this.setAttribute("position",new e.Float32BufferAttribute([-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],3)),this.setAttribute("uv",new e.Float32BufferAttribute([-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],2))}computeBoundingBox=function(){var t=new e.Box3;return function(){null===this.boundingBox&&(this.boundingBox=new e.Box3);var i=this.attributes.instanceStart,s=this.attributes.instanceEnd;void 0!==i&&void 0!==s&&(this.boundingBox.setFromBufferAttribute(i),t.setFromBufferAttribute(s),this.boundingBox.union(t))}}();computeBoundingSphere=function(){var t=new e.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new e.Sphere),null===this.boundingBox&&this.computeBoundingBox();var i=this.attributes.instanceStart,s=this.attributes.instanceEnd;if(void 0!==i&&void 0!==s){var n=this.boundingSphere.center;this.boundingBox.getCenter(n);for(var r=0,o=0,a=i.count;o<a;o++)t.fromBufferAttribute(i,o),r=Math.max(r,n.distanceToSquared(t)),t.fromBufferAttribute(s,o),r=Math.max(r,n.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error("LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}}();applyMatrix4(e){const t=this.attributes.instanceStart,i=this.attributes.instanceEnd;return void 0!==t&&(t.applyMatrix4(e),i.applyMatrix4(e),t.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}setPositions(t){let i;t instanceof Float32Array?i=t:Array.isArray(t)&&(i=new Float32Array(t));const s=new e.InstancedInterleavedBuffer(i,6,1);return this.setAttribute("instanceStart",new e.InterleavedBufferAttribute(s,3,0)),this.setAttribute("instanceEnd",new e.InterleavedBufferAttribute(s,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(t){let i;t instanceof Float32Array?i=t:Array.isArray(t)&&(i=new Float32Array(t));const s=new e.InstancedInterleavedBuffer(i,6,1);return s.setUsage(e.DynamicDrawUsage),this.setAttribute("instanceColorStart",new e.InterleavedBufferAttribute(s,3,0)),this.setAttribute("instanceColorEnd",new e.InterleavedBufferAttribute(s,3,3)),this}fromWireframeGeometry(e){return this.setPositions(e.attributes.position.array),this}fromEdgesGeometry(e){return this.setPositions(e.attributes.position.array),this}fromMesh(t){return this.fromWireframeGeometry(new e.WireframeGeometry(t.geometry)),this}fromLineSegments(e){const t=e.geometry;if(!t.isGeometry)return t.isBufferGeometry&&this.setPositions(t.attributes.position.array),this;console.error("THREE.LineSegmentsGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.")}toJSON(){}applyMatrix(e){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(e)}}class a extends e.Mesh{constructor(e=new THREE.LineSegmentsGeometry,t=new THREE.LineMaterial({color:16777215*Math.random()})){super(e,t),this.type="LineSegments2"}computeLineDistances=function(){var t=new e.Vector3,i=new e.Vector3;return function(){for(var s=this.geometry,n=s.attributes.instanceStart,r=s.attributes.instanceEnd,o=new Float32Array(2*n.data.count),a=0,h=0,d=n.data.count;a<d;a++,h+=2)t.fromBufferAttribute(n,a),i.fromBufferAttribute(r,a),o[h]=0===h?0:o[h-1],o[h+1]=o[h]+t.distanceTo(i);var l=new e.InstancedInterleavedBuffer(o,2,1);return s.setAttribute("instanceDistanceStart",new e.InterleavedBufferAttribute(l,1,0)),s.setAttribute("instanceDistanceEnd",new e.InterleavedBufferAttribute(l,1,1)),this}}();raycast=function(){const t=new e.Sphere,i=new e.Vector4,s=new e.Box3,n=new e.Vector4,r=new e.Vector3,o=new e.Matrix4,a=new e.Vector4,h=new e.Vector4,d=new e.Line3,l=new e.Vector3;return function(e,c){null===e.camera&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2.');const _=void 0!==e.params.Line2&&e.params.Line2.threshold||0,g=e.ray,u=e.camera,p=u.projectionMatrix,v=this.matrixWorld,y=this.geometry,m=this.material,f=m.resolution,x=m.linewidth+_,b=y.attributes.instanceStart,L=y.attributes.instanceEnd,w=-u.near,S=2*Math.max(x/f.width,x/f.height);null===y.boundingSphere&&y.computeBoundingSphere(),t.copy(y.boundingSphere).applyMatrix4(v);const E=Math.max(u.near,t.distanceToPoint(g.origin));i.set(0,0,-E,1).applyMatrix4(u.projectionMatrix),i.multiplyScalar(1/i.w),i.applyMatrix4(u.projectionMatrixInverse);const M=.5*Math.abs(S/i.w);if(t.radius+=M,!1===e.ray.intersectsSphere(t))return;null===y.boundingBox&&y.computeBoundingBox(),s.copy(y.boundingBox).applyMatrix4(v);const N=Math.max(u.near,s.distanceToPoint(g.origin));i.set(0,0,-N,1).applyMatrix4(u.projectionMatrix),i.multiplyScalar(1/i.w),i.applyMatrix4(u.projectionMatrixInverse);const C=.5*Math.abs(S/i.w);if(s.max.x+=C,s.max.y+=C,s.max.z+=C,s.min.x-=C,s.min.y-=C,s.min.z-=C,!1!==e.ray.intersectsBox(s)){g.at(1,n),n.w=1,n.applyMatrix4(u.matrixWorldInverse),n.applyMatrix4(p),n.multiplyScalar(1/n.w),n.x*=f.x/2,n.y*=f.y/2,n.z=0,r.copy(n),o.multiplyMatrices(u.matrixWorldInverse,v);for(let e=0,t=b.count;e<t;e++){if(a.fromBufferAttribute(b,e),h.fromBufferAttribute(L,e),a.w=1,h.w=1,a.applyMatrix4(o),h.applyMatrix4(o),a.z>w&&h.z>w)continue;if(a.z>w){const e=a.z-h.z,t=(a.z-w)/e;a.lerp(h,t)}else if(h.z>w){const e=h.z-a.z,t=(h.z-w)/e;h.lerp(a,t)}a.applyMatrix4(p),h.applyMatrix4(p),a.multiplyScalar(1/a.w),h.multiplyScalar(1/h.w),a.x*=f.x/2,a.y*=f.y/2,h.x*=f.x/2,h.y*=f.y/2,d.start.copy(a),d.start.z=0,d.end.copy(h),d.end.z=0;const t=d.closestPointToPointParameter(r,!0);d.at(t,l);const i=THREE.MathUtils.lerp(a.z,h.z,t),s=i>=-1&&i<=1,n=r.distanceTo(l)<.5*x;if(s&&n){d.start.fromBufferAttribute(b,e),d.end.fromBufferAttribute(L,e),d.start.applyMatrix4(v),d.end.applyMatrix4(v);const t=new THREE.Vector3,i=new THREE.Vector3;g.distanceSqToSegment(d.start,d.end,i,t),c.push({point:i,pointOnLine:t,distance:g.origin.distanceTo(i),object:this,face:null,faceIndex:e,uv:null,uv2:null})}}}}}()}a.prototype.LineSegments2=!0;class h extends o{constructor(){super(),this.type="LineGeometry"}setPositions(e){for(var t=e.length-3,i=new Float32Array(2*t),s=0;s<t;s+=3)i[2*s]=e[s],i[2*s+1]=e[s+1],i[2*s+2]=e[s+2],i[2*s+3]=e[s+3],i[2*s+4]=e[s+4],i[2*s+5]=e[s+5];return super.setPositions(i),this}setColors(e){for(var t=e.length-3,i=new Float32Array(2*t),s=0;s<t;s+=3)i[2*s]=e[s],i[2*s+1]=e[s+1],i[2*s+2]=e[s+2],i[2*s+3]=e[s+3],i[2*s+4]=e[s+4],i[2*s+5]=e[s+5];return super.setColors(i),this}fromLine(e){var t=e.geometry;if(!t.isGeometry)return t.isBufferGeometry&&this.setPositions(t.attributes.position.array),this;console.error("THREE.LineGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.")}copy(){return this}}h.prototype.isLineGeometry=!0;class d extends a{constructor(e=new h,t=new r({color:16777215*Math.random()})){super(e,t),this.type="Line2"}}d.prototype.isLine2=!0;class l extends e.EventDispatcher{constructor(t){super(),this._hoveredEdge=null,this._hoveredEdgeID=-1,this._hoveredEdges=[],this._activeEdges=[],this._graph=t,this._pickingTexture=new e.WebGLRenderTarget(this._graph._container.clientWidth,this._graph._container.clientHeight),this._pickingTexture.texture.minFilter=e.LinearFilter,this._pickingLineScene=new e.Scene,this._pickingLineScene.background=new e.Color(0)}get hoveredEdge(){return this._hoveredEdge}onResize(){this._lineMaterial&&(this._lineMaterial.resolution.set(this._graph._container.clientWidth,this._graph._container.clientHeight),this._lineMaterial.needsUpdate=!0),this._pickingTexture&&this._pickingTexture.setSize(this._graph._container.clientWidth,this._graph._container.clientHeight)}onScale(e){this._lineMaterial&&(this._lineMaterial.uniforms.scale.value=e,this._lineMaterial.needsUpdate=!0),this._linePickingMaterial&&(this._linePickingMaterial.uniforms.scale.value=e,this._linePickingMaterial.needsUpdate=!0)}draw(){this._disposeInternal();const e=this._constructLines(this._graph._edges);this._constructMesh(e),this._constructPickingMesh(e)}dispose(){this._disposeInternal(),this._pickingLineScene&&(this._pickingLineScene=null),this._pickingTexture&&(this._pickingTexture.dispose(),this._pickingTexture=null),this._graph=null}setHoveredEdges(e){this._hoveredEdges=e.filter((e=>!e.__hovered)),this._hoveredEdges.forEach((e=>e.__hovered=!0)),this._setEdgesSize(this._hoveredEdges,1.3,1)}clearHoveredEdges(){const e=this._hoveredEdges.filter((e=>e.__hovered));this._setEdgesSize(e,1,1.3),this._hoveredEdges.forEach((e=>e.__hovered=!1)),this._hoveredEdges=[]}setActiveEdges(e){this._activeEdges=e.filter((e=>!e.__active)),this._activeEdges.forEach((e=>e.__active=!0)),this._setEdgesColor(this._activeEdges,this._graph.dataConfig.colorsEvents.selectEdge)}setDeactivatedEdges(e){const t=e.filter((e=>e.__active));t.forEach((e=>e.__active=!1)),this._setEdgesColor(t)}clearActiveEdges(){const e=this._activeEdges.filter((e=>!0===e.__active&&e!==this.hoveredEdge));this._setEdgesSize(e,1,1.3),this._setEdgesColor(e),e.forEach((e=>e.__active=!1)),this._activeEdges=[],this.recalculate(),this.recalculatePicking()}_setEdgesSize(e,t,i){if(e.length){for(const s of e)if(s._lineSizeRange){const e=s._lineSizeRange[1]-s._lineSizeRange[0];if(s.size=s.size*t/i,e>1)for(let e=s._lineSizeRange[0];e<s._lineSizeRange[1];e++)this._lineGeometry.attributes.linewidth.setX(e,s.size);else this._lineGeometry.attributes.linewidth.setX(s._lineSizeRange[0],s.size)}this._setPickingLineSize(e),this._lineGeometry.attributes.linewidth.needsUpdate=!0}}resetHoverEdge(){this._hoveredEdge&&(this._hoveredEdge.__hovered=!1,void 0!==this._hoveredEdge.__active&&!1!==this._hoveredEdge.__active||this._setEdgesSize([this._hoveredEdge],1,1.3),this._graph.onEvent.emit("edgeUnhover",{edge:this._hoveredEdge}),this._hoveredEdge=null,this._hoveredEdgeID=-1)}testEdge(e){if(this._pickingTexture){this._graph._renderer.setRenderTarget(this._pickingTexture),this._graph._renderer.render(this._pickingLineScene,this._graph._camera),this._graph._renderer.setRenderTarget(null);const t=new Uint8Array(4);this._graph._renderer.readRenderTargetPixels(this._pickingTexture,e.x,this._pickingTexture.height-e.y,1,1,t);const i=t[0]<<16|t[1]<<8|t[2];i?this._hoveredEdgeID!==i-1&&(this.resetHoverEdge(),this._hoveredEdge=this._graph._edges[i-1],this._hoveredEdge.__hovered=!0,this._hoveredEdgeID=i-1,void 0!==this._hoveredEdge.__active&&!1!==this._hoveredEdge.__active||this._setEdgesSize([this._hoveredEdge],1.3,1),this._graph.onEvent.emit("edgeHover",{edge:this._hoveredEdge,...e})):this.resetHoverEdge()}}recalculate(){if(this._lineGeometry){const e=this._constructLines(this._graph._edges);this._lineGeometry.setPositions(e.positions)}}recalculatePicking(){const e=this._constructLines(this._graph._edges);this._linesPickingGeometry.setPositions(e.positions)}_setEdgesColor(t,i){if(!t.length)return;const s=new e.Color;for(const e of t){i?s.setStyle(i):s.setStyle(e.color);for(let t=e._lineSizeRange[0];t<e._lineSizeRange[1];t++)this._lineGeometry.attributes.instanceColorStart.setXYZ(t,s.r,s.g,s.b),this._lineGeometry.attributes.instanceColorEnd.setXYZ(t,s.r,s.g,s.b)}this._lineGeometry.attributes.instanceColorStart.needsUpdate=!0,this._lineGeometry.attributes.instanceColorEnd.needsUpdate=!0}_setPickingLineSize(e){if(e.length){for(const t of e)if(t._lineSizeRange){const e=t._lineSizeRange[1]-t._lineSizeRange[0];if(e>1)for(let e=t._lineSizeRange[0];e<t._lineSizeRange[1];e++)this._linesPickingGeometry.attributes.linewidth.setX(e,t.size);else this._linesPickingGeometry.attributes.linewidth.setX(t._lineSizeRange[0],t.size);this._linesPickingGeometry.attributes.linewidth.updateRange={offset:t._lineSizeRange[0],count:e}}this._linesPickingGeometry.attributes.linewidth.needsUpdate=!0}}_constructMesh(t){this._lineGeometry=new o,this._lineGeometry.setPositions(t.positions),this._lineGeometry.setColors(t.colors);const i=new e.InstancedBufferAttribute(new Float32Array(t.sizes),1);i.setUsage(e.DynamicDrawUsage);const s=new e.InstancedBufferAttribute(new Float32Array(t.isDashed),1);s.setUsage(e.DynamicDrawUsage),this._lineGeometry.setAttribute("linewidth",i),this._lineGeometry.setAttribute("dashed",s),this._lineGeometry.attributes.instanceStart.data.usage=e.DynamicDrawUsage,this._lineGeometry.attributes.instanceEnd.data.usage=e.DynamicDrawUsage,this._lineMaterial=new r({dashScale:.1,dashSize:2,depthTest:!1,gapSize:1,scale:this._graph._controls?this._graph._controls.scale:1,vertexColors:!0}),this._lineMaterial.useColor=1,this._lineMaterial.resolution.set(this._graph._container.clientWidth,this._graph._container.clientHeight),this._lineMesh=new d(this._lineGeometry,this._lineMaterial),this._lineMesh.computeLineDistances(),this._graph._scene.add(this._lineMesh)}_constructPickingMesh(t){this._linesPickingGeometry=new o,this._linesPickingGeometry.setPositions(t.positions),this._linesPickingGeometry.setColors(t.pickingColors);const i=new e.InstancedBufferAttribute(new Float32Array(t.sizes),1);i.setUsage(e.DynamicDrawUsage);const s=new e.InstancedBufferAttribute(new Float32Array(t.isDashed),1);s.setUsage(e.DynamicDrawUsage),this._linesPickingGeometry.setAttribute("linewidth",i),this._linesPickingGeometry.setAttribute("dashed",s),this._linesPickingGeometry.attributes.instanceStart.data.usage=e.DynamicDrawUsage,this._linesPickingGeometry.attributes.instanceEnd.data.usage=e.DynamicDrawUsage,this._linePickingMaterial=new r({dashScale:.1,dashSize:2,depthTest:!1,gapSize:1,scale:this._graph._controls?this._graph._controls.scale:1,vertexColors:!0}),this._linePickingMaterial.useColor=1,this._linePickingMaterial.resolution.set(this._graph._container.clientWidth,this._graph._container.clientHeight),this._linePickingMesh=new d(this._linesPickingGeometry,this._linePickingMaterial),this._linePickingMesh.computeLineDistances(),this._pickingLineScene&&(this._pickingLineScene.add(this._linePickingMesh),this._pickingLineScene.updateMatrixWorld(!0))}_disposeInternal(){this._lineGeometry&&(this._lineGeometry.dispose(),this._lineGeometry=null),this._linesPickingGeometry&&(this._linesPickingGeometry.dispose(),this._linesPickingGeometry=null),this._linePickingMaterial&&(this._linePickingMaterial.dispose(),this._linePickingMaterial=null),this._lineMaterial&&(this._lineMaterial.dispose(),this._lineMaterial=null),this._linePickingMesh&&this._pickingLineScene&&(this._pickingLineScene.remove(this._linePickingMesh),this._linePickingMesh=null),this._lineMesh&&this._graph&&(this._graph._scene.remove(this._lineMesh),this._lineMesh=null),this._hoveredEdge=null,this._hoveredEdgeID=-1,this._hoveredEdges=[],this._activeEdges=[]}_constructLines(t){const i=[],s=[],n=[],r=[],o=[],a=new e.Color,h=new e.Color;return t.forEach(((t,d)=>{const l=Math.atan2(t.target.y-t.source.y,t.target.x-t.source.x);let c,_,g,u;if(t.arrow&&"source"===t.arrow?(c=t.source.x+(t.source.size/2*this._graph.nodeScalingFactor+1.5*t.size)*Math.cos(l),_=t.source.y+(t.source.size/2*this._graph.nodeScalingFactor+1.5*t.size)*Math.sin(l)):(c=t.source.x+t.source.size/2*this._graph.nodeScalingFactor*Math.cos(l),_=t.source.y+t.source.size/2*this._graph.nodeScalingFactor*Math.sin(l)),"none"===t.arrow||"source"===t.arrow?(g=t.target.x-t.target.size/2*this._graph.nodeScalingFactor*Math.cos(l),u=t.target.y-t.target.size/2*this._graph.nodeScalingFactor*Math.sin(l)):(g=t.target.x-(t.target.size/2*this._graph.nodeScalingFactor+1.5*t.size)*Math.cos(l),u=t.target.y-(t.target.size/2*this._graph.nodeScalingFactor+1.5*t.size)*Math.sin(l)),a.setStyle(t.color),h.setHex(d+1),t.source.x===t.target.x&&t.source.y===t.target.y){const d=new e.Vector3(t.source.x,t.source.y||0,0),l=new e.Vector3(t.target.x,t.target.y||0,0),c=15*t.source.size,_=-0,g=_+Math.PI/2,u=new e.CubicBezierCurve3(d,new e.Vector3(c*Math.cos(g),c*Math.sin(g),0).add(d),new e.Vector3(c*Math.cos(_),c*Math.sin(_),0).add(d),l).getPoints(50);let p;t._lineSizeRange=[n.length,n.length+u.length-2];for(let e=0;e<u.length-1;e+=2)p?(i.push(p.x,p.y,0,u[e].x,u[e].y,0,u[e].x,u[e].y,0,u[e+1].x,u[e+1].y,0),n.push(t.size,t.size),"dashed"===t.type?r.push(1,1):r.push(0,0),s.push(a.r,a.g,a.b,a.r,a.g,a.b,a.r,a.g,a.b,a.r,a.g,a.b),o.push(h.r,h.g,h.b,h.r,h.g,h.b,h.r,h.g,h.b,h.r,h.g,h.b)):(i.push(u[e].x,u[e].y,0,u[e+1].x,u[e+1].y,0),n.push(t.size),"dashed"===t.type?r.push(1):r.push(0),s.push(a.r,a.g,a.b,a.r,a.g,a.b),o.push(h.r,h.g,h.b,h.r,h.g,h.b)),p=u[e+1]}else i.push(c,_,0,g,u,0),t._lineSizeRange=[n.length,n.length+1],n.push(t.size),"dashed"===t.type?r.push(1):r.push(0),s.push(a.r,a.g,a.b,a.r,a.g,a.b),o.push(h.r,h.g,h.b,h.r,h.g,h.b)})),{colors:s,isDashed:r,pickingColors:o,positions:i,sizes:n}}}class c{constructor(e){this._labels=[],this._isHidden=!1,this._graph=e,this._textCanvas=document.createElement("canvas"),this._textCanvas.setAttribute("style","position: absolute;left: 0px;top: 0px;z-index:10;"),this._textCanvas.width=this._graph._renderer.domElement.width,this._textCanvas.height=this._graph._renderer.domElement.height,this._textCanvas.style.userSelect="none",this._textCanvas.style.pointerEvents="none",this._textContext=this._textCanvas.getContext("2d"),this._graph._container.appendChild(this._textCanvas),this._textContext.font="12px Roboto",CanvasRenderingContext2D.prototype.roundRect=function(e,t,i,s,n){let r;return i<2*n&&(r=i/2),s<2*n&&(r=s/2),this.beginPath(),this.moveTo(e+r,t),this.arcTo(e+i,t,e+i,t+s,r),this.arcTo(e+i,t+s,e,t+s,r),this.arcTo(e,t+s,e,t,r),this.arcTo(e,t,e+i,t,r),this.closePath(),this}}onResize(){this._clearTextLayer(),this._graph._renderer&&(this._textCanvas.width=this._graph._renderer.domElement.width,this._textCanvas.height=this._graph._renderer.domElement.height),this.recalculate()}clear(){this._labels=[],this._clearTextLayer()}addLabel(e,t,i,s){const n=this._labels.length;return this._labels.push({nodeSize:s,text:e,x:t,y:i}),n}show(){this._isHidden=!1,this.recalculate()}isHidden(){return this._isHidden}hide(){this._clearTextLayer(),this._isHidden=!0}toggleLabels(){this._isHidden?this.show():this.hide()}setLabelsPositionForNodes(e,t){for(const i of e)void 0!==i.__labelIndex&&(this._labels[i.__labelIndex].x=this._labels[i.__labelIndex].x-t.x,this._labels[i.__labelIndex].y=this._labels[i.__labelIndex].y-t.y)}setLabelPosition(e,t){this._labels[e]&&(this._labels[e].x=t.x,this._labels[e].y=t.y)}draw(e){if(this._isHidden)return;e||this._clearTextLayer();const t=this._graph._container.getBoundingClientRect();for(const i of this._labels){const s=this._graph._translateCoordinates(i.x,i.y);s.x>0&&s.x<t.width&&s.y>0&&s.y<t.height&&7*i.nodeSize*this._graph._controls.scale>45&&this._drawText(i.text,s,i.nodeSize,e)}}recalculate(){if(this._isHidden)return;this._clearTextLayer();const e=this._graph._container.getBoundingClientRect();for(const t of this._labels){const i=this._graph._translateCoordinates(t.x,t.y);i.x>0&&i.x<e.width&&i.y>0&&i.y<e.height&&7*t.nodeSize*this._graph._controls.scale>45&&this._drawText(t.text,i,t.nodeSize)}}dispose(){this._graph._container.removeChild(this._textCanvas),this._labels=[]}_clearTextLayer(){this._textContext.clearRect(0,0,this._textContext.canvas.width,this._textContext.canvas.height)}_drawText(e,t,i,s){let n;n=s||this._textContext;n.font="12px Roboto";const r=n.measureText(e).width,o=i/2*this._graph.nodeScalingFactor*this._graph._controls.scale;n.shadowColor="rgba(0, 0, 0, 0.2)",n.shadowBlur=3,n.shadowOffsetY=1,n.roundRect(o+t.x+1,t.y-7.716-2,r+10,15.432+6,2),n.strokeStyle="rgba(0, 0, 0, 0.2)",n.stroke(),n.fillStyle="white",n.fill(),n.shadowColor="",n.shadowBlur=0,n.shadowOffsetY=0,n.fillStyle="black",n.fillText(e,o+6+t.x,t.y+5)}}class _ extends e.EventDispatcher{constructor(){super(),this.textureWidth=0,this.textureHeight=0,this.canvasHeight=4096,this.canvasWidth=4096,this._nodeImageToIndex={},this._textureIndex=0,this._enabled=!0,this.canvas=document.createElement("canvas"),this.canvas.width=this.canvasWidth,this.canvas.height=this.canvasHeight,this.textureWidth=this.canvasWidth/32,this.textureHeight=this.canvasHeight/32,this._ctx=this.canvas.getContext("2d"),this._ctx&&(this._ctx.fillStyle="white",this._ctx.fillRect(0,0,this.canvas.width,this.canvas.height)),this.textureMap=new e.CanvasTexture(this.canvas),this.textureMap.flipY=!1}disable(){this._enabled=!1}enable(){this._enabled=!0}dispose(){this._nodeImageToIndex={},this.textureMap&&(this.textureMap.dispose(),this.textureMap=null),this._ctx&&this._ctx.clearRect(0,0,this.canvasWidth,this.canvasHeight),this.canvas=null}loadImage(e){if(void 0!==this._nodeImageToIndex[e])return this._nodeImageToIndex[e];if(this._ctx){const t=this._textureIndex;this._textureIndex+=1,this._nodeImageToIndex[e]=t;const i=new Image;return i.onload=()=>{const e=t*this.textureWidth%this.canvasWidth,s=Math.floor(t*this.textureWidth/this.canvasWidth)*this.textureHeight;this._ctx&&this._ctx.drawImage(i,0,0,i.width,i.height,e+10,s+10,this.textureWidth-20,this.textureHeight-20),this.textureMap&&(this.textureMap.needsUpdate=!0),this._enabled&&this.dispatchEvent({index:t,type:"imageLoaded"})},i.src=e,t}return-1}}class g{constructor(t){this.hoveredNode=null,this._colorToNodeID={},this._silent=!1,this._size=new e.Vector3,this._buffer=new Uint8Array,this._hoveredNodes=[],this._activeNodes=[],this._graph=t,this._imageLoaded=function(e,t,i={}){let s,n,r=null,o=0;function a(){o=!1===i.leading?0:+new Date,r=null,n=e.apply(null,s)}return(...h)=>{const d=+new Date;o||!1!==i.leading||(o=d);const l=t-(d-o);return s=h,l<=0?(clearTimeout(r),r=null,o=d,n=e.apply(null,s)):r||!1===i.trailing||(r=setTimeout(a,l)),n}}((()=>{this._silent||this._graph._render()}),800,{trailing:!0}),this._imageCanvas=new _,this._imageCanvas.addEventListener("imageLoaded",this._imageLoaded),this._pickingTexture=new e.WebGLRenderTarget(this._graph._container.clientWidth,this._graph._container.clientHeight),this._pickingTexture.texture.minFilter=e.LinearFilter,this._pickingNodesScene=new e.Scene,this._pickingNodesScene.background=new e.Color(0),this._color=new e.Color}get activeNodes(){return this._activeNodes}setSilent(e){this._silent=e}draw(){this._disposeInternal(),this._graph._labelsLayer&&this._graph._labelsLayer.clear();const t=new Float32Array(3*this._graph._nodes.length),i=new Float32Array(3*this._graph._nodes.length),s=new Float32Array(this._graph._nodes.length),n=new Float32Array(this._graph._nodes.length),r=new Float32Array(this._graph._nodes.length);for(let e=0,o=0,a=this._graph._nodes.length;e<a;e++,o+=3){if(t[o+0]=this._graph._nodes[e].x,t[o+1]=this._graph._nodes[e].y,t[o+2]=0,this._color&&(this._color.setStyle(this._graph._nodes[e].color),i[o+0]=this._color.r,i[o+1]=this._color.g,i[o+2]=this._color.b),s[e]=this._graph._nodes[e].size,this._graph._nodes[e].img){const t=this._imageCanvas.loadImage(this._graph._nodes[e].img);this._graph._nodes[e]._imageIndex=t,n[e]=t}else n[e]=-1;this._graph._nodes[e].__positionIndex=e;const a=this._graph.translateCoordinatesFromCamera(this._graph._nodes[e].x,this._graph._nodes[e].y);this._graph._nodes[e].coordinates=a,this._graph._nodes[e].showDot?r[e]=1:r[e]=0,this._graph._labelsLayer&&this._graph._nodes[e].label&&(this._graph._nodes[e].__labelIndex=this._graph._labelsLayer.addLabel(this._graph._nodes[e].label,this._graph._nodes[e].x,this._graph._nodes[e].y,this._graph._nodes[e].size))}const o=new e.Box3;o.setFromArray(t),o.getSize(this._size),this._nodesBufferGeometry=new e.BufferGeometry,this._nodesInstancedGeometry=new e.InstancedBufferGeometry,this._nodesInstancedGeometry.index=this._nodesBufferGeometry.index,this._nodesInstancedGeometry.attributes=this._nodesBufferGeometry.attributes,this._nodesInstancedGeometry.setAttribute("position",new e.BufferAttribute(new Float32Array([0,0,0]),3)),this._nodeTranslateAttribute=new e.InstancedBufferAttribute(t,3),this._nodeTranslateAttribute.setUsage(e.DynamicDrawUsage),this._nodeColorAttribute=new e.InstancedBufferAttribute(i,3),this._nodeColorAttribute.setUsage(e.DynamicDrawUsage),this._nodesInstancedGeometry.setAttribute("translation",this._nodeTranslateAttribute),this._nodesInstancedGeometry.setAttribute("color",this._nodeColorAttribute),this._nodesInstancedGeometry.setAttribute("size",new e.InstancedBufferAttribute(s,1)),this._nodesInstancedGeometry.setAttribute("image",new e.InstancedBufferAttribute(n,1)),this._nodesInstancedGeometry.setAttribute("showDot",new e.InstancedBufferAttribute(r,1)),this._nodesMaterial=new e.RawShaderMaterial({depthTest:!1,depthWrite:!1,fragmentShader:"\n  #ifdef GL_OES_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n  #endif\n\n  precision highp float;\n\n  uniform sampler2D textureMap;\n\n  varying float vScale;\n  varying float vNodeScaleFactor;\n  varying float vSize;\n  varying vec3 vColor;\n  varying float vImage;\n  varying float vShowDot;\n  varying highp vec4 v_sprite;\n\n  void main() {\n    vec2 uv = vec2( gl_PointCoord.x, gl_PointCoord.y );\n    float radius = 0.5;\n    float border = 0.0;\n    float distance = 0.0;\n\n    vec2 m = uv - vec2(0.5, 0.5);\n    float dist = radius - sqrt(dot(m, m));\n\n    if (vSize * vNodeScaleFactor * vScale > 30.0) {\n      distance = 0.025;\n      if (0.08 - vSize * (vScale / 1000.0) > 0.04) {\n        border = 0.08 - vSize * (vScale / 1000.0) / 2.0;\n      } else {\n        border = 0.06;\n      }\n\n      float sm = smoothstep(0.0, distance, dist);\n      float sm2 = smoothstep(border, border - distance, dist);\n      float alpha = sm*sm2;\n\n      float tm = smoothstep(border, border + distance, dist);\n\n      if (dist > border)\n        if (vImage > -1.0) {\n          gl_FragColor = vec4(texture2D(textureMap, vec2((v_sprite.s + v_sprite.p * uv.x), (v_sprite.t + v_sprite.q * uv.y))).rgb, tm);\n        } else {\n          gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n        }\n      else if (dist > 0.0)\n        gl_FragColor = vec4(vColor, alpha);\n      else discard;\n    } else if (vSize * vNodeScaleFactor * vScale > 12.0) {\n      distance = 0.1;\n      border = 0.15;\n      float l = vColor.r * 0.3 + vColor.g * 0.59 + vColor.b * 0.11;\n      if (l > 0.5) {\n        // gray\n        if (vScale < 0.5) {\n          distance = 0.1;\n          border = 0.25;\n        } else if (vScale > 10.0) {\n          border = 0.05;\n          distance = 0.016;\n        } else {\n          border = 0.2 - vScale / 50.0;\n          distance = border / 2.5;\n        }\n      }\n\n      float sm = smoothstep(0.0, distance, dist);\n      float sm2 = smoothstep(border, border - distance, dist);\n      float alpha = sm*sm2;\n\n      if (dist > border + 0.02 && vShowDot > 0.0) {\n        float r = 0.0, delta = 0.0, alpha2 = 1.0;\n        vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n        r = dot(cxy, cxy);\n        #ifdef GL_OES_standard_derivatives\n          delta = fwidth(r);\n          alpha2 = 1.0 - smoothstep(0.2 - delta, 0.2 + delta, r);\n        #endif\n\n        gl_FragColor = vec4(vColor, alpha2);\n      } else if (dist > 0.0) {\n        gl_FragColor = vec4(vColor, alpha);\n      } else discard;\n    } else {\n      float r = 0.0, delta = 0.0, alpha = 1.0;\n      vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n      r = dot(cxy, cxy);\n      #ifdef GL_OES_standard_derivatives\n        delta = fwidth(r);\n        alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n      #endif\n\n      if (dist > 0.0)\n        gl_FragColor = vec4(vColor, alpha);\n      else discard;\n    }\n  }\n",transparent:!1,uniforms:{nodeScalingFactor:{value:this._graph.nodeScalingFactor},scale:{value:this._graph._controls?this._graph._controls.scale:1},spriteDim:{value:new e.Vector2(this._imageCanvas.textureWidth,this._imageCanvas.textureHeight)},textureDim:{value:new e.Vector2(this._imageCanvas.canvasWidth,this._imageCanvas.canvasHeight)},textureMap:{value:this._imageCanvas.textureMap}},vertexColors:!0,vertexShader:"\n  precision mediump float;\n\n  uniform mat4 modelViewMatrix;\n  uniform mat4 projectionMatrix;\n  uniform float scale;\n  uniform float nodeScalingFactor;\n  uniform vec2 spriteDim;\n  uniform vec2 textureDim;\n\n  attribute vec3 position;\n  attribute vec3 color;\n  attribute vec3 translation;\n  attribute float size;\n  attribute float image;\n  attribute float showDot;\n\n  varying vec3 vColor;\n  varying float vScale;\n  varying float vNodeScaleFactor;\n  varying float vSize;\n  varying float vImage;\n  varying highp vec4 v_sprite;\n  varying float vShowDot;\n\n  void main() {\n    vColor = color;\n    vScale = scale;\n    vSize = size;\n    vImage = image;\n    vShowDot = showDot;\n    vNodeScaleFactor = nodeScalingFactor;\n\n    highp vec2 sp = vec2(mod((image * spriteDim.x), textureDim.x), floor((image * spriteDim.x) / textureDim.y) * spriteDim.y);\n    v_sprite = vec4(sp.x / textureDim.x, sp.y / textureDim.y, spriteDim.x / textureDim.x, spriteDim.y / textureDim.y);\n\n    vec3 pos = position + translation;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n\n    if (size * scale * nodeScalingFactor > 5.0) {\n      gl_PointSize = size * scale * nodeScalingFactor;\n    } else {\n      gl_PointSize = 5.0;\n    }\n  }\n"}),this._nodeMesh=new e.Points(this._nodesInstancedGeometry,this._nodesMaterial),this._nodeMesh.frustumCulled=!1,this._nodeMesh.renderOrder=10,this._graph._scene.add(this._nodeMesh);const a=new Float32Array(3*this._graph._nodes.length);for(let e=0,t=0,i=this._graph._nodes.length;e<i;e++,t+=3)this._color&&(this._color.setHex(e+1),a[t+0]=this._color.r,a[t+1]=this._color.g,a[t+2]=this._color.b),this._colorToNodeID[e+1]=this._graph._nodes[e].id;this._nodesPickingMaterial=new e.RawShaderMaterial({fragmentShader:"\n  #ifdef GL_OES_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n  #endif\n\n  precision highp float;\n\n  varying vec3 vColor;\n\n  void main() {\n    float r = 0.0, delta = 0.0, alpha = 1.0;\n    vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n    r = dot(cxy, cxy);\n    if (r > 1.0) {\n      discard;\n    }\n\n    gl_FragColor = vec4(vColor, 1.0) * alpha;\n  }\n",uniforms:{nodeScalingFactor:{value:this._graph.nodeScalingFactor},scale:{value:this._graph._controls?this._graph._controls.scale:1}},vertexShader:"\n  precision mediump float;\n\n  uniform mat4 modelViewMatrix;\n  uniform mat4 projectionMatrix;\n  uniform float nodeScalingFactor;\n  uniform float scale;\n\n  attribute vec3 position;    // blueprint's vertex positions\n  attribute vec3 color;       // only used for raycasting\n  attribute vec3 translation; // x y translation offsets for an instance\n  attribute float size;\n\n  varying vec3 vColor;\n\n  void main() {\n    vColor = color;\n\n    vec3 pos = position + translation;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n\n    gl_PointSize = size * scale * nodeScalingFactor;\n  }\n"}),this._nodesPickingGeometry=this._nodeMesh.geometry.clone(),this._nodesPickingGeometry.setAttribute("color",new e.InstancedBufferAttribute(a,3)),this._nodesPickingsMesh=new e.Points(this._nodesPickingGeometry,this._nodesPickingMaterial),this._nodesPickingsMesh.frustumCulled=!1,this._pickingNodesScene&&(this._pickingNodesScene.add(this._nodesPickingsMesh),this._pickingNodesScene.updateMatrixWorld(!0))}getSize(){return this._size}setHoveredNodes(e){this.clearHoveredNodes(),this._hoveredNodes=e.filter((e=>!e.__active)),this._hoveredNodes.forEach((e=>e.__hovered=!0)),this.setNodesColor(this._hoveredNodes,this._graph.dataConfig.colorsEvents.selectNode)}clearHoveredNodes(){const e=this._hoveredNodes.filter((e=>!0===e.__hovered&&!e.__active));this.setNodesColor(e)}setActiveNodes(e){if(this._activeNodes.length&&e[0].index===this._activeNodes[0].index)return void this.clearActiveNodes();this.clearActiveNodes(),this._activeNodes=e,this._activeNodes.forEach((e=>e.__active=!0));const t=this._activeNodes.filter((e=>void 0===e.__hovered||!1===e.__hovered));this.setNodesColor(t,this._graph.dataConfig.colorsEvents.selectNode)}clearActiveNodes(){this._activeNodes.forEach((e=>e.__active=!1));const e=this._activeNodes.filter((e=>void 0===e.__hovered||!1===e.__hovered));this.setNodesColor(e),this._activeNodes=[]}setNodesColor(t,i){if(!t.length)return;const s=new e.Color;for(const e of t)i?s.setStyle(i):s.setStyle(e.color),this._nodeColorAttribute.setXYZ(e.__positionIndex,s.r,s.g,s.b);this._nodeColorAttribute.needsUpdate=!0}setNodePosition(e,t){if(this._nodesInstancedGeometry&&this._nodesPickingGeometry){for(const i of e)if(this._nodesInstancedGeometry&&this._nodesPickingGeometry){i.x-=t.x,i.y-=t.y;const e=this._graph._translateCoordinates(i.x,i.y);i.coordinates=e,this._nodesInstancedGeometry.attributes.translation.setXYZ(i.__positionIndex,i.x,i.y,0),this._nodesPickingGeometry.attributes.translation.setXYZ(i.__positionIndex,i.x,i.y,0)}this._nodesInstancedGeometry.attributes.translation.needsUpdate=!0,this._nodesPickingGeometry.attributes.translation.needsUpdate=!0}}testNode(e){if(this._pickingTexture){this._graph._renderer.setRenderTarget(this._pickingTexture),this._graph._renderer.render(this._pickingNodesScene,this._graph._camera),this._graph._renderer.setRenderTarget(null);const t=new Uint8Array(4);this._graph._renderer.readRenderTargetPixels(this._pickingTexture,e.x,this._pickingTexture.height-e.y,1,1,t);const i=t[0]<<16|t[1]<<8|t[2];if(i){const e=this._graph._indexedNodes[this._colorToNodeID[i]];if(this.hoveredNode!==e){const t=this._hoveredNodes.filter((e=>void 0===e.__active||!1===e.__active));this.setNodesColor(t),this._hoveredNodes.forEach((e=>e.__hovered=!1)),this.hoveredNode=e,this._hoveredNodes=[e,...this._graph.neighbourhoodNodes[e.id]],this._hoveredNodes.forEach((e=>e.__hovered=!0));const i=this._hoveredNodes.filter((e=>void 0===e.__active||!1===e.__active));this.setNodesColor(i,this._graph.dataConfig.colorsEvents.hoverNode);const s=this._graph._translateCoordinates(this.hoveredNode.x,this.hoveredNode.y);this._graph.onEvent.emit("nodeHover",{node:this.hoveredNode,...s,scale:this._graph._controls.scale}),this._graph._render()}return this.hoveredNode}if(null!==this.hoveredNode){const e=this._hoveredNodes.filter((e=>void 0===e.__active||!1===e.__active));this.setNodesColor(e),this._hoveredNodes.forEach((e=>e.__hovered=!1)),this._hoveredNodes=[],this._graph.onEvent.emit("nodeUnhover",{node:this.hoveredNode}),this.hoveredNode=null,this._graph._render()}}}pickNode(e){if(this._pickingTexture&&this._buffer.length){const t=e.x+(this._pickingTexture.height-e.y)*this._pickingTexture.width,i=this._buffer.slice(4*t,4*t+4),s=i[0]<<16|i[1]<<8|i[2];if(s)return this._graph._indexedNodes[this._colorToNodeID[s]]}return null}recalculate(){const t=new Float32Array(3*this._graph._nodes.length);for(let e=0,i=0,s=this._graph._nodes.length;e<s;e++,i+=3){t[i+0]=this._graph._nodes[e].x,t[i+1]=this._graph._nodes[e].y,t[i+2]=0,this._graph._nodes[e].__positionIndex=e;const s=this._graph.translateCoordinatesFromCamera(this._graph._nodes[e].x,this._graph._nodes[e].y);this._graph._nodes[e].coordinates=s,this._graph._labelsLayer&&void 0!==this._graph._nodes[e].__labelIndex&&this._graph._labelsLayer.setLabelPosition(this._graph._nodes[e].__labelIndex,{x:this._graph._nodes[e].x,y:this._graph._nodes[e].y,z:0},!1)}if(this._nodesInstancedGeometry){const i=new e.InstancedBufferAttribute(t,3);this._nodesInstancedGeometry.setAttribute("translation",i)}}recalculatePicking(){const t=new Float32Array(3*this._graph._nodes.length);for(let e=0,i=0,s=this._graph._nodes.length;e<s;e++,i+=3)t[i+0]=this._graph._nodes[e].x,t[i+1]=this._graph._nodes[e].y,t[i+2]=0;if(this._nodesPickingGeometry){const i=new e.InstancedBufferAttribute(t,3);this._nodesPickingGeometry.setAttribute("translation",i)}}onScale(e){this._nodesMaterial&&this._nodesPickingMaterial&&(this._nodesMaterial.uniforms.scale.value=e,this._nodesMaterial.needsUpdate=!0,this._nodesPickingMaterial.uniforms.scale.value=e,this._nodesPickingMaterial.needsUpdate=!0)}onResize(){this._pickingTexture&&this._pickingTexture.setSize(this._graph._container.clientWidth,this._graph._container.clientHeight)}dispose(){this._disposeInternal(),this._imageCanvas&&this._imageCanvas.dispose(),this._pickingNodesScene&&(this._pickingNodesScene=null),this._imageCanvas.removeEventListener("imageLoaded",this._imageLoaded),this._pickingTexture&&(this._pickingTexture.dispose(),this._pickingTexture=null),this.hoveredNode=null,this._color=null,this._colorToNodeID={}}refreshBuffer(){this._pickingTexture&&(this._graph._renderer.setRenderTarget(this._pickingTexture),this._graph._renderer.render(this._pickingNodesScene,this._graph._camera),this._graph._renderer.setRenderTarget(null),this._buffer=new Uint8Array(4*this._pickingTexture.width*this._pickingTexture.height),this._graph._renderer.readRenderTargetPixels(this._pickingTexture,0,0,this._pickingTexture.width,this._pickingTexture.height,this._buffer))}_disposeInternal(){this._nodesBufferGeometry&&(this._nodesBufferGeometry.dispose(),this._nodesBufferGeometry=null),this._nodesInstancedGeometry&&(this._nodesInstancedGeometry.dispose(),this._nodesInstancedGeometry=null),this._nodesMaterial&&(this._nodesMaterial.dispose(),this._nodesMaterial=null),this._nodeMesh&&(this._graph._scene.remove(this._nodeMesh),this._nodeMesh=null),this._nodesPickingGeometry&&(this._nodesPickingGeometry.dispose(),this._nodesPickingGeometry=null),this._nodesPickingMaterial&&(this._nodesPickingMaterial.dispose(),this._nodesPickingMaterial=null),this._nodesPickingsMesh&&this._pickingNodesScene&&(this._pickingNodesScene.remove(this._nodesPickingsMesh),this._nodesPickingsMesh=null),this._buffer=new Uint8Array,this._hoveredNodes=[],this.hoveredNode=null,this._activeNodes=[]}}class u{constructor(s){this.onEvent=new t,this.nodeScalingFactor=5,this.animationTime=500,this.neighbourhoodNodes={},this.neighbourhoodEdges={},this.dataConfig={showLabels:!0,animate:!1,locate:!1,colorsEvents:{hoverEdge:"#547DE4",selectEdge:"#547DE4",hoverNode:"#547DE4",selectNode:"#547DE4"}},this._options={},this._container=document.body,this._fov=75,this._far=1e4,this._nodes=[],this._edges=[],this._center=null,this._dragInProgress=!1,this._dragging=!1,this._plane=new e.Plane,this._raycaster=new e.Raycaster,this._intersection=new e.Vector3,this._offset=new e.Vector3,this._indexedNodes={},this._labelsLayer=null,this._arrowsLayer=null,this._edgesLayer=null,this._nodesLayer=null,this._startPoint=new e.Vector2,this._pointTopLeft=new e.Vector2,this._pointBottomRight=new e.Vector2,this._resizeTimeout=0,this._labelHidedOnMove=!1,this._selectMode=!1,this.options=s,this.options.container&&(this._container=this.options.container,s.clearContainer&&(this._container.innerHTML="")),this._setupScene(),this._setupCamera(),this._setupRenderer(),this._controls=new s.controls(this._camera,this._container,this._renderer),this._controls.init(),this._addControlsListeners(),this._render(),this.options.disableLabels||(this._labelsLayer=new c(this),this.options.showLabels||this._labelsLayer.hide()),this._arrowsLayer=new i(this),this._edgesLayer=new l(this),this._nodesLayer=new g(this),this._resizeHandler=()=>{clearTimeout(this._resizeTimeout),this._resizeTimeout=setTimeout((()=>{this._renderer&&this._camera&&(this._renderer.setSize(this._container.clientWidth,this._container.clientHeight,!1),this._camera.aspect=this._container.clientWidth/this._container.clientHeight,this._camera.updateProjectionMatrix()),this._edgesLayer&&this._edgesLayer.onResize(),this._labelsLayer&&this._labelsLayer.onResize(),this._nodesLayer&&this._nodesLayer.onResize(),this._render()}),20)},this._controls.setCameraPosition(1e3),this._selectBox=document.createElement("div"),this._selectBox.style.pointerEvents="none",this._selectBox.style.zIndex="10001",this._selectBox.style.border="1px solid red",this._selectBox.style.position="absolute",this._selectBox.style.backgroundColor="rgba(75, 160, 255, 0.3)",this._iframe=document.createElement("iframe"),this._iframe.style.position="absolute",this._iframe.style.userSelect="none",this._iframe.style.top="0",this._iframe.style.left="0",this._iframe.style.height="100%",this._iframe.style.width="100%",this._iframe.style.zIndex="-1",this._container.appendChild(this._iframe),this._iframe.contentWindow&&this._iframe.contentWindow.addEventListener("resize",this._resizeHandler,!1)}set options(e){this._options=e}get options(){return this._options}resize(){this._resizeHandler()}zoomIn(){return this._controls.zoomIn()}zoomOut(){return this._controls.zoomOut()}showLabels(){this._labelsLayer&&this._labelsLayer.show()}hideLabels(){this._labelsLayer&&this._labelsLayer.hide()}activateSelectMode(){this._selectMode=!0,this._controls.enabled=!1,this.onEvent.emit("changeMode",{mode:"select"})}deactivateSelectMode(){this._selectMode=!1,this._controls.enabled=!0,this.onEvent.emit("changeMode",{mode:"view"})}toggleLabels(){this._labelsLayer&&this._labelsLayer.toggleLabels()}setData(e,t=this.dataConfig){this.dataConfig=t,this._nodes=JSON.parse(JSON.stringify(e.nodes));const i=JSON.parse(JSON.stringify(this._indexedNodes));if(this._indexingNodes(),this._edges=JSON.parse(JSON.stringify(e.links)),this._edges.forEach((e=>{e.target&&(e.target=this._indexedNodes[e.target.id]),e.source&&(e.source=this._indexedNodes[e.source.id])})),this._collectNeighbourhoods(),e.center&&(this._center=this._indexedNodes[e.center],this._center&&t.locate&&this._controls&&this._controls.setTransform(this._center)),this._labelsLayer&&this._labelsLayer.clear(),this._renderer&&(this._renderer.clear(),this._renderer.renderLists.dispose(),this._camera&&(this._renderer.setSize(this._container.clientWidth,this._container.clientHeight,!1),this._camera.aspect=this._container.clientWidth/this._container.clientHeight,this._camera.updateProjectionMatrix())),t.animate){for(const e in this._indexedNodes)i[e]?(this._indexedNodes[e].toX=this._indexedNodes[e].x,this._indexedNodes[e].toY=this._indexedNodes[e].y,this._indexedNodes[e].fromX=i[e].x,this._indexedNodes[e].fromY=i[e].y,this._indexedNodes[e].x=i[e].x,this._indexedNodes[e].y=i[e].y):(this._indexedNodes[e].toX=this._indexedNodes[e].x,this._indexedNodes[e].toY=this._indexedNodes[e].y,this._center&&this._indexedNodes[e].id===this._center.id?(this._indexedNodes[e].fromX=this._center.x,this._indexedNodes[e].fromY=this._center.y,this._indexedNodes[e].x=this._center.x,this._indexedNodes[e].y=this._center.y):(this._indexedNodes[e].fromX=this._getRandomFromRange(-this._container.clientWidth,this._container.clientWidth),this._indexedNodes[e].fromY=this._getRandomFromRange(-this._container.clientHeight,this._container.clientHeight),this._indexedNodes[e].x=this._getRandomFromRange(-this._container.clientWidth,this._container.clientWidth),this._indexedNodes[e].y=this._getRandomFromRange(-this._container.clientHeight,this._container.clientHeight)));this._edgesLayer&&this._edgesLayer.draw(),this._arrowsLayer&&this._arrowsLayer.draw(),this._nodesLayer&&this._nodesLayer.draw(),this._labelsLayer&&this._labelsLayer.draw(),this._render(),requestAnimationFrame(this._animate.bind(this))}else this._edgesLayer&&this._edgesLayer.draw(),this._arrowsLayer&&this._arrowsLayer.draw(),this._nodesLayer&&this._nodesLayer.draw(),this._labelsLayer&&this._labelsLayer.draw(),this._render();if(this._camera&&this._nodesLayer){const e=this._nodesLayer.getSize(),t=Math.max(e.y,e.x);t?(this._camera.near=150,this._camera.far=10*t):(this._camera.near=150,this._camera.far=1e3),this._camera.updateProjectionMatrix(),this._controls.setZoomExtent()}}getActiveNodes(){return this._nodesLayer?this._nodesLayer.activeNodes:[]}getNodes(){return this._nodes?JSON.parse(JSON.stringify(this._nodes)):[]}getNodeByID(e){const t=this._indexedNodes[e];return{node:t,...this._translateCoordinates(t.x,t.y),scale:this._controls.scale}}getScreenshot(){const t=new e.WebGLRenderer({premultipliedAlpha:!1,preserveDrawingBuffer:!0,antialias:!0,alpha:!0});this._scene&&this._camera&&(t.setSize(this._container.clientWidth,this._container.clientHeight),t.setPixelRatio(1),t.render(this._scene,this._camera));const i=document.createElement("canvas");i.width=this._container.clientWidth,i.height=this._container.clientHeight;const s=i.getContext("2d");return s&&(s.fillStyle="white",s.fillRect(0,0,i.width,i.height),s.drawImage(t.getContext().canvas,0,0),this._labelsLayer&&this._labelsLayer.draw(s)),i.toDataURL("image/png")}destroy(){this._iframe&&this._iframe.contentWindow&&(this._iframe.contentWindow.removeEventListener("resize",this._resizeHandler),this._container.removeChild(this._iframe)),this._removeControlsListeners(),this._labelsLayer&&(this._labelsLayer.dispose(),this._labelsLayer=null),this._arrowsLayer&&(this._arrowsLayer.dispose(),this._arrowsLayer=null),this._edgesLayer&&(this._edgesLayer.dispose(),this._edgesLayer=null),this._nodesLayer&&(this._nodesLayer.dispose(),this._nodesLayer=null),this._disposeRenderer(),this._camera=null,this._controls&&(this._controls.dispose(),this._controls=null),this._nodes=[],this._edges=[],this._center=null,this._indexedNodes={},this._scene=null}_addControlsListeners(){this._onScaleListener=this._onScale.bind(this),this._controls.addEventListener("scale",this._onScaleListener),this._onPanListener=this._onPan.bind(this),this._controls.addEventListener("pan",this._onPanListener),this._onMouseMoveListener=this._onMouseMove.bind(this),this._controls.addEventListener("mousemove",this._onMouseMoveListener),this._onContextMenuListener=this._onContextMenu.bind(this),this._controls.addEventListener("contextmenu",this._onContextMenuListener),this._onDblClickListener=this._onDblClick.bind(this),this._controls.addEventListener("dblclick",this._onDblClickListener),this._onClickListener=this._onClick.bind(this),this._controls.addEventListener("click",this._onClickListener),this._onMouseDownListener=this._onMouseDown.bind(this),this._controls.addEventListener("mousedown",this._onMouseDownListener),this._onMouseUpListener=this._onMouseUp.bind(this),this._controls.addEventListener("mouseup",this._onMouseUpListener),this._onRotateListener=this._onRotate.bind(this),this._controls.addEventListener("rotate",this._onRotateListener),this.onEvent.on("nodeHover",this._onNodeHover.bind(this)),this.onEvent.on("nodeUnhover",this._onNodeUnhover.bind(this)),this.onEvent.on("workspaceClick",this._onWorkspaceClick.bind(this))}_removeControlsListeners(){this._controls.removeEventListener("scale",this._onScaleListener),this._controls.removeEventListener("pan",this._onPanListener),this._controls.removeEventListener("mousemove",this._onMouseMoveListener),this._controls.removeEventListener("contextmenu",this._onContextMenuListener),this._controls.removeEventListener("dblclick",this._onDblClickListener),this._controls.removeEventListener("click",this._onClickListener),this._controls.removeEventListener("mousedown",this._onMouseDownListener),this._controls.removeEventListener("mouseup",this._onMouseUpListener),this._controls.removeEventListener("rotate",this._onRotateListener),this.onEvent.removeAllListeners()}_onWorkspaceClick(){this._nodesLayer&&this._nodesLayer.clearActiveNodes(),this._edgesLayer&&this._edgesLayer.clearHoveredEdges(),this._arrowsLayer&&this._arrowsLayer.recalculate(),this._render()}_onNodeHover(e){const t=e.node,i=this.neighbourhoodEdges[t.id];this._edgesLayer&&this._edgesLayer.setHoveredEdges(i),this._arrowsLayer&&this._arrowsLayer.recalculate(),this._render()}_onNodeUnhover(){this._edgesLayer&&this._edgesLayer.clearHoveredEdges(),this._arrowsLayer&&this._arrowsLayer.recalculate(),this._render()}_onRotate({delta:e}){this._scene&&(this._scene.rotation.z+=.001*e),this._render()}_onMouseMove({position:t,event:i}){var s;if(this._dragging&&this._camera){const i=new e.Vector3;i.x=t.x/this._container.clientWidth*2-1,i.y=-t.y/this._container.clientHeight*2+1;let s={x:0,y:0};if(this._nodesLayer&&this._nodesLayer.hoveredNode){if(this._labelsLayer&&!this._labelsLayer.isHidden()&&(this._labelHidedOnMove=!0,this._labelsLayer.hide()),s={x:this._nodesLayer.hoveredNode?this._nodesLayer.hoveredNode.x:0,y:this._nodesLayer.hoveredNode?this._nodesLayer.hoveredNode.y:0},this._dragInProgress)this._raycaster.setFromCamera(i,this._camera),this._raycaster.ray.intersectPlane(this._plane,this._intersection),s=this._intersection.sub(this._offset).clone();else{const t=new e.Vector3;this._camera.getWorldDirection(t),this._plane.setFromNormalAndCoplanarPoint(t,new e.Vector3(this._nodesLayer.hoveredNode.x,this._nodesLayer.hoveredNode.y,0)),this._raycaster.setFromCamera(i,this._camera),this._raycaster.ray.intersectPlane(this._plane,this._intersection),this._offset.copy(this._intersection).sub(new e.Vector3(this._nodesLayer.hoveredNode.x,this._nodesLayer.hoveredNode.y,0)),s=this._intersection.sub(this._offset).clone(),this._dragInProgress=!0}if(null!==this._nodesLayer.hoveredNode){const e={x:0,y:0};let t;e.x=this._nodesLayer.hoveredNode.x-s.x,e.y=this._nodesLayer.hoveredNode.y-s.y,t=this._nodesLayer&&this._nodesLayer.activeNodes.length?this._nodesLayer.activeNodes.find((e=>!(!this._nodesLayer||!this._nodesLayer.hoveredNode)&&e.id===this._nodesLayer.hoveredNode.id))?this._nodesLayer.activeNodes:[this._nodesLayer.hoveredNode,...this.neighbourhoodNodes[this._nodesLayer.hoveredNode.id]]:[this._nodesLayer.hoveredNode],this._nodesLayer.setNodePosition(t,e),this._labelsLayer&&this._labelsLayer.setLabelsPositionForNodes(t,e)}const t=this._translateCoordinates(this._nodesLayer.hoveredNode.x,this._nodesLayer.hoveredNode.y);this.onEvent.emit("nodeMoving",{node:this._nodesLayer.hoveredNode,...t,scale:this._controls.scale})}this._edgesLayer&&(this._edgesLayer.recalculate(),this._edgesLayer.recalculatePicking()),this._labelsLayer&&this._labelsLayer.recalculate(),this._arrowsLayer&&this._arrowsLayer.recalculate()}else{if(this._renderer&&!this._renderer.domElement.contains(i.target))return;this._selectMode?(this._pointBottomRight.x=Math.max(this._startPoint.x,t.x),this._pointBottomRight.y=Math.max(this._startPoint.y,t.y),this._pointTopLeft.x=Math.min(this._startPoint.x,t.x),this._pointTopLeft.y=Math.min(this._startPoint.y,t.y),this._selectBox.style.left=this._pointTopLeft.x+"px",this._selectBox.style.top=this._pointTopLeft.y+"px",this._selectBox.style.width=this._pointBottomRight.x-this._pointTopLeft.x+"px",this._selectBox.style.height=this._pointBottomRight.y-this._pointTopLeft.y+"px"):(this._nodesLayer&&!this._nodesLayer.testNode(t)?null===(s=this._edgesLayer)||void 0===s||s.testEdge(t):this._edgesLayer&&this._edgesLayer.resetHoverEdge(),this._arrowsLayer&&this._arrowsLayer.recalculate())}this._render()}_onMouseUp({event:e}){var t,i,s,n,r,o,a,h,d;if(this._selectMode){if(this._selectMode=!1,this.onEvent.emit("changeMode",{mode:"view"}),this._selectBox&&this._selectBox.parentElement&&this._selectBox.parentElement.removeChild(this._selectBox),this._nodesLayer&&this._camera){const e={};this._nodesLayer.refreshBuffer();for(let t=this._pointTopLeft.x;t<this._pointBottomRight.x;t++)for(let i=this._pointTopLeft.y;i<this._pointBottomRight.y;i++){const s=this._nodesLayer.pickNode({x:t,y:i});s&&(e[s.id]=s)}Object.values(e).length&&(this._nodesLayer&&this._nodesLayer.setActiveNodes(Object.values(e)),this._render())}}else{if(this._nodesLayer&&!this._dragInProgress){if(this._nodesLayer.hoveredNode)if(e.ctrlKey)this._nodesLayer.setActiveNodes([this._nodesLayer.hoveredNode,...this._nodesLayer.activeNodes]);else{const e=[this._nodesLayer.hoveredNode,...this.neighbourhoodNodes[this._nodesLayer.hoveredNode.id]];if(this._nodesLayer.setActiveNodes(e),this._edgesLayer){this._edgesLayer.clearHoveredEdges();const e=this.neighbourhoodEdges[this._nodesLayer.hoveredNode.id];this._edgesLayer.setHoveredEdges(e)}this._arrowsLayer&&this._arrowsLayer.recalculate()}this._render()}if((null===(t=this._edgesLayer)||void 0===t?void 0:t.hoveredEdge)&&0===e.button){this._edgesLayer.clearActiveEdges(),null===(i=this._arrowsLayer)||void 0===i||i.clearActiveArrowOfEdges();const e=this._edgesLayer.hoveredEdge;e.__active?(null===(s=this._edgesLayer)||void 0===s||s.setDeactivatedEdges([e]),null===(n=this._arrowsLayer)||void 0===n||n.setDeactivatedArrowByEdges([e]),null===(r=this._nodesLayer)||void 0===r||r.clearHoveredNodes(),this.onEvent.emit("selectEdge",{selectedEdge:void 0})):(null===(o=this._edgesLayer)||void 0===o||o.setActiveEdges([e]),null===(a=this._arrowsLayer)||void 0===a||a.setActiveArrowByEdges([e]),null===(h=this._nodesLayer)||void 0===h||h.clearActiveNodes(),null===(d=this._nodesLayer)||void 0===d||d.setHoveredNodes([e.source,e.target]),this.onEvent.emit("selectEdge",{selectedEdge:e})),this._arrowsLayer&&this._arrowsLayer.recalculate(),this._render()}}this._nodesLayer&&!this._nodesLayer.hoveredNode&&this._edgesLayer&&!this._edgesLayer.hoveredEdge&&this.onEvent.emit("workspaceClick"),this._controls.enabled=!0,this._dragging=!1,this._dragInProgress=!1,this._labelsLayer&&this._labelHidedOnMove&&(this._labelsLayer.show(),this._labelHidedOnMove=!1)}_onMouseDown({event:t,position:i}){this._nodesLayer&&null!==this._nodesLayer.hoveredNode&&1===t.buttons||this._edgesLayer&&null!==this._edgesLayer.hoveredEdge&&1===t.buttons?(this._controls.enabled=!1,this._dragging=!0):(this._selectMode||t.shiftKey)&&(this._selectMode||this.activateSelectMode(),this._nodesLayer&&(this._nodesLayer.clearActiveNodes(),this._render()),this._renderer&&this._renderer.domElement&&this._renderer.domElement.parentElement&&this._renderer.domElement.parentElement.appendChild(this._selectBox),this._selectBox.style.left=i.x+"px",this._selectBox.style.top=i.y+"px",this._selectBox.style.width="0px",this._selectBox.style.height="0px",this._selectBox.style.zIndex="10001",this._selectBox.style.backgroundColor="rgba(75, 160, 255, 0.3)",this._selectBox.style.position="absolute",this._selectBox.style.border="1px solid red",this._selectBox.style.pointerEvents="none",this._startPoint=new e.Vector2,this._pointBottomRight=new e.Vector2,this._pointTopLeft=new e.Vector2,this._startPoint.x=i.x,this._startPoint.y=i.y)}_onClick(){if(this._nodesLayer&&this._nodesLayer.hoveredNode){const e=this._translateCoordinates(this._nodesLayer.hoveredNode.x,this._nodesLayer.hoveredNode.y);this.onEvent.emit("nodeClick",{node:this._nodesLayer.hoveredNode,...e,scale:this._controls.scale})}this._edgesLayer&&this._edgesLayer.hoveredEdge&&this.onEvent.emit("edgeClick",{edge:this._edgesLayer.hoveredEdge,scale:this._controls.scale})}_onDblClick(){if(this._nodesLayer&&null!==this._nodesLayer.hoveredNode){const e=this._translateCoordinates(this._nodesLayer.hoveredNode.x,this._nodesLayer.hoveredNode.y);this.onEvent.emit("nodeDblClick",{node:this._nodesLayer.hoveredNode,...e,scale:this._controls.scale})}}_onContextMenu(e){if(this._nodesLayer&&this._nodesLayer.hoveredNode){const e=this._translateCoordinates(this._nodesLayer.hoveredNode.x,this._nodesLayer.hoveredNode.y);this.onEvent.emit("nodeContextMenu",{node:this._nodesLayer.hoveredNode,...e,scale:this._controls.scale})}else this._edgesLayer&&this._edgesLayer.hoveredEdge&&this.onEvent.emit("edgeContextMenu",{edge:this._edgesLayer.hoveredEdge,coordinates:e,scale:this._controls.scale})}_onPan(){if(this._render(),this._labelsLayer&&this._labelsLayer.recalculate(),this._nodesLayer&&this._nodesLayer.hoveredNode){const e=this._translateCoordinates(this._nodesLayer.hoveredNode.x,this._nodesLayer.hoveredNode.y);this.onEvent.emit("nodeScaling",{node:this._nodesLayer.hoveredNode,...e,scale:this._controls.scale})}else this.onEvent.emit("workspaceViewChanged",{scale:this._controls.scale})}_onScale(e){if(this._nodesLayer&&this._nodesLayer.onScale(e.scale),this._edgesLayer&&this._edgesLayer.onScale(e.scale),this._render(),this._labelsLayer&&this._labelsLayer.recalculate(),this._nodesLayer&&this._nodesLayer.hoveredNode){const t=this._translateCoordinates(this._nodesLayer.hoveredNode.x,this._nodesLayer.hoveredNode.y);this.onEvent.emit("nodeScaling",{node:this._nodesLayer.hoveredNode,...t,scale:this._controls.scale,canZoom:e.canZoom,zoomDirection:e.zoomDirection})}else this.onEvent.emit("workspaceViewChanged",{scale:this._controls.scale,canZoom:e.canZoom,zoomDirection:e.zoomDirection})}_disposeRenderer(){this._renderer&&(this._renderer.renderLists.dispose(),this._renderer.domElement&&this._container.removeChild(this._renderer.domElement),this._renderer.dispose(),this._renderer=null)}_translateCoordinates(t,i){const s=new e.Vector3(t,i,0);if(this._camera&&this._renderer){const e=.5*this._renderer.getContext().canvas.width,t=.5*this._renderer.getContext().canvas.height;s.project(this._camera),s.x=s.x*e+e,s.y=-s.y*t+t}return{x:s.x,y:s.y}}translateCoordinatesFromCamera(t,i){const s=new e.Vector3(t,i,0);return{x:s.x,y:-s.y}}_setupScene(){this._scene=new e.Scene,this._scene.background=new e.Color(this.options.backgroundColor||"white")}_setupCamera(){this._camera=new e.PerspectiveCamera(this._fov,this._container.clientWidth/this._container.clientHeight,.1,this._far),this._camera.lookAt(0,0,0)}_setupRenderer(){this._renderer=new e.WebGLRenderer({alpha:!0,antialias:!0}),this._renderer.setPixelRatio(1),this._renderer.setSize(this._container.clientWidth,this._container.clientHeight,!1),this._renderer.domElement.style.position="absolute",this._renderer.domElement.style.userSelect="none",this._container.appendChild(this._renderer.domElement)}_render(){this._scene&&this._camera&&this._renderer&&this._renderer.render(this._scene,this._camera)}_collectNeighbourhoods(){this.neighbourhoodNodes={};for(const e of this._edges)this.neighbourhoodNodes[e.source.id]||(this.neighbourhoodNodes[e.source.id]=[]),this.neighbourhoodNodes[e.target.id]||(this.neighbourhoodNodes[e.target.id]=[]),e.source.id!==e.target.id&&(this.neighbourhoodNodes[e.source.id].push(e.target),this.neighbourhoodNodes[e.target.id].push(e.source)),this.neighbourhoodEdges[e.source.id]||(this.neighbourhoodEdges[e.source.id]=[]),this.neighbourhoodEdges[e.target.id]||(this.neighbourhoodEdges[e.target.id]=[]),this.neighbourhoodEdges[e.source.id].push(e),this.neighbourhoodEdges[e.target.id].push(e)}_indexingNodes(){this._indexedNodes={};for(const e of this._nodes)this._indexedNodes[e.id]&&console.error(`Node with id ${e.id} already exists`),this._indexedNodes[e.id]=e}_moveNodes(e=!1){this._nodesLayer&&this._nodesLayer.recalculate(),this._labelsLayer&&this._labelsLayer.recalculate(),this._edgesLayer&&this._edgesLayer.recalculate(),this._arrowsLayer&&this._arrowsLayer.recalculate(),e&&(this._nodesLayer&&this._nodesLayer.recalculatePicking(),this._edgesLayer&&this._edgesLayer.recalculatePicking())}_getRandomFromRange(e,t){return Math.floor(Math.random()*(t-e))+e}_interpolate(e){let t=e;return(t*=2)<1?.5*t*t:-.5*(--t*(t-2)-1)}_animate(){const e=Date.now();this._arrowsLayer&&this._arrowsLayer.hide(),this._labelsLayer&&this._labelsLayer.hide(),this._nodesLayer&&this._nodesLayer.setSilent(!0);const t=()=>{let i=(Date.now()-e)/this.animationTime;if(i>=1){for(const e in this._indexedNodes)this._indexedNodes[e]&&(this._indexedNodes[e].x=this._indexedNodes[e].toX,this._indexedNodes[e].y=this._indexedNodes[e].toY);this._moveNodes(!0),this._arrowsLayer&&this._arrowsLayer.show(),this._labelsLayer&&this.options.showLabels&&this._labelsLayer.show(),this._nodesLayer&&this._nodesLayer.setSilent(!1),this._render()}else{i=this._interpolate(i);for(const e in this._indexedNodes)this._indexedNodes[e]&&(this._indexedNodes[e].x=this._indexedNodes[e].toX*i+this._indexedNodes[e].fromX*(1-i),this._indexedNodes[e].y=this._indexedNodes[e].toY*i+this._indexedNodes[e].fromY*(1-i));this._moveNodes(),this._render(),requestAnimationFrame(t)}};t()}}})(),n})()}));