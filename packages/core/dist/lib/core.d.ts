import { PerspectiveCamera, Scene, WebGLRenderer } from 'three';
import { EventEmitter } from './emitter';
import { GraphOptions } from './options';
import { LabelsLayer } from './labelsLayer/labels';
import { IGraphDataConfig } from './types';
export declare class PretyGraph {
    onEvent: EventEmitter;
    nodeScalingFactor: number;
    animationTime: number;
    neighbourhoodNodes: {
        [id: string]: any;
    };
    neighbourhoodEdges: {
        [id: string]: any;
    };
    dataConfig: IGraphDataConfig;
    _container: HTMLElement;
    _labelsLayer: LabelsLayer | null;
    _controls: any;
    _nodes: any[];
    _edges: any[];
    _renderer: WebGLRenderer | null;
    _scene: Scene | null;
    _camera: PerspectiveCamera | null;
    _indexedNodes: {
        [id: string]: any;
    };
    private _options;
    private _composer;
    private readonly _fov;
    private readonly _far;
    private _center;
    private _dragInProgress;
    private _dragging;
    private readonly _plane;
    private readonly _raycaster;
    private readonly _intersection;
    private readonly _offset;
    private _arrowsLayer;
    private _edgesLayer;
    private _nodesLayer;
    private readonly _resizeHandler;
    private readonly _selectBox;
    private _startPoint;
    private _pointTopLeft;
    private _pointBottomRight;
    private readonly _iframe;
    private _resizeTimeout;
    private _labelHidedOnMove;
    private _selectMode;
    private _onScaleListener;
    private _onPanListener;
    private _onMouseMoveListener;
    private _onContextMenuListener;
    private _onDblClickListener;
    private _onClickListener;
    private _onMouseDownListener;
    private _onMouseUpListener;
    private _onRotateListener;
    private _onBlurListener?;
    constructor(options: GraphOptions);
    set options(options: GraphOptions);
    get options(): GraphOptions;
    resize(): void;
    zoomIn(): boolean;
    zoomOut(): boolean;
    showLabels(): void;
    hideLabels(): void;
    render(): void;
    activateSelectMode(): void;
    deactivateSelectMode(): void;
    clearSelectedEdges(): void;
    toggleLabels(): void;
    setData(data: any, options?: IGraphDataConfig): void;
    getActiveNodes(): any[];
    getNodes(): any[];
    getNodeByID(nodeID: string): any;
    getScreenshot(): string;
    destroy(): void;
    translateCoordinates(x: number, y: number): any;
    translateCoordinatesFromCamera(x: number, y: number): any;
    private _addControlsListeners;
    private _removeControlsListeners;
    private _onWorkspaceClick;
    private _onNodeHover;
    private _onNodeUnhover;
    private _onRotate;
    private _onMouseMove;
    private _onMouseUp;
    private _onMouseDown;
    private _onClick;
    private _onDblClick;
    private _onContextMenu;
    private _onPan;
    private _onBlur;
    private _onScale;
    private _disposeRenderer;
    private _setupScene;
    private _setupCamera;
    private _setupRenderer;
    private _collectNeighbourhoods;
    private _indexingNodes;
    private _moveNodes;
    private _getRandomFromRange;
    private _interpolate;
    private _animate;
    private _resetHoveredElements;
}
